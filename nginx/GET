#!/bin/sh

set -e

LD_OPT=""
EXT=${1:-"so"}
echo EXT=$EXT
if [ "$EXT" == "so" ]; then
	LD_OPT='-pie'
fi

# TODO: gather version number from input.
VERSION=1.9.15
BASEDIR=$PWD
SRCDIR=$BASEDIR/nginx-$VERSION.$EXT
BUILDDIR=$BASEDIR/build
ROOTDIR=$BASEDIR/install
OUTDIR=$BASEDIR/out

if [ -f $OUTDIR/nginx.$EXT ]
then
	echo "File $OUTDIR/nginx.$EXT already exists, do not recompile"
	cd $SRCDIR
	cp objs/nginx $OUTDIR/nginx.$EXT
	sleep 1
	exit 0
fi

# Gather Nginx source for desired version.
echo "Getting Nginx source version" $VERSION
if [ ! -f nginx-$VERSION.tar.gz ]; then
    wget nginx.org/download/nginx-$VERSION.tar.gz
fi
if [ ! -d nginx-$VERSION.$EXT ]; then
	tar zxf nginx-$VERSION.tar.gz && mv nginx-$VERSION nginx-$VERSION.$EXT
	(cd $SRCDIR && git init && git add . && git commit -m 'orig code')
	if [ "$EXT" == "so" ]; then
		(cd $SRCDIR && cp $BASEDIR/ngx_process.c $SRCDIR/src/os/unix/ngx_process.c)
		(cd $SRCDIR && patch -p1 < ../fioasync.patch)
	fi
fi

# Configure build options.
echo "Configuring Nginx build options.."
cd $SRCDIR
./configure --with-debug --without-http_rewrite_module --with-cc-opt='-O2 -D_FORTIFY_SOURCE=2 -fPIC' --with-ld-opt=$LD_OPT

# Build Nginx from source.
echo "Building Nginx from source.."
cp $BASEDIR/nginx.conf $SRCDIR/conf/nginx.conf
make
[ ! -d $OUTDIR ] && mkdir $OUTDIR
cp objs/nginx $OUTDIR/nginx.$EXT
cp conf/mime.types $OUTDIR/mime.types
cp html/index.html $OUTDIR/index.html

# Generate usr.manifest.
[ ! -d $BASEDIR/logs ] && mkdir $BASEDIR/logs
echo "Generating usr.manifest.."
cd $BASEDIR
if [ "$EXT" == "so" ]; then
	cat > usr.manifest <<EOF
# This file is automatically generated
/tools/nginx.so: \${MODULE_DIR}/out/nginx.so
/usr/local/nginx/conf/nginx.conf: \${MODULE_DIR}/nginx.conf
/usr/local/nginx/conf/mime.types: \${MODULE_DIR}/out/mime.types
/usr/local/nginx/html/index.html: \${MODULE_DIR}/out/index.html
/usr/local/nginx/logs: \${MODULE_DIR}/logs
EOF
fi

